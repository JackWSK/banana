// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Show an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "description": "User account information with user id and username",
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "userId",
                    "type": "integer",
                    "minimum": 5,
                    "example": 1
                },
                "name": {
                    "description": "user name",
                    "type": "string",
                    "example": "account name"
                },
                "userType": {
                    "$ref": "#/definitions/model.UserType"
                },
                "userType2": {
                    "$ref": "#/definitions/model.UserType2"
                }
            }
        },
        "model.UserType": {
            "type": "string",
            "enum": [
                "SUCCESS",
                "aaaa"
            ],
            "x-enum-varnames": [
                "UserTypeGender",
                "UserTypeFuck"
            ]
        },
        "model.UserType2": {
            "description": "1(成功),2(失败)",
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "UserType2Gender",
                "UserType2Fuck"
            ]
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
